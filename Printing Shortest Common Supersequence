string shortestCommonSupersequence(string A, string B) {
int n=A.length();
        int m=B.length();
        int dp[n+1][m+1];
    for(int i=0;i<=n;i++) {
        for(int j=0;j<=m;j++)   {
            if(i==0 || j==0)    {
                dp[i][j] = 0;
            }
        }
    }
    for(int i=1;i<=n;i++) {
        for(int j=1;j<=m;j++) {
            if(A[i-1] == B[j-1])    {
                dp[i][j] = 1 + dp[i-1][j-1];
            }
            else    {
                dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
            }
        }
    }
    string ans;
    while(m>0 && n>0)   {
        if(A[n-1]==B[m-1])  {
            ans.push_back(A[n-1]);
            n--;
            m--;
        }
        else    {
            if(dp[n-1][m] > dp[n][m-1]) {
                ans.push_back(A[n-1]);
                n--;
            }
            else    {
                ans.push_back(B[m-1]);
                m--;
            }
        }
    }
    while(n>0)  {
        ans.push_back(A[n-1]);
        n--;
    }
    while(m>0)  {
        ans.push_back(B[m-1]);
        m--;
    }
    reverse(ans.begin(),ans.end());
    return ans;
    }
