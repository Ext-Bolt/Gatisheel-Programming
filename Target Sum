int findTargetSumWays(vector<int>& nums, int target)    {
    int s1 = 0;
    int zeroCount = 0;
    vector<int> a;
    int n=0;
    for(int i : nums) 
    {
        if(i == 0) zeroCount++;
        else { a.push_back(i); n++;}
        s1 += i;
    }
    if((s1 + target) % 2) return 0;
    a.resize(n);
    int s = (s1+target)/2;
    if(s<0) {return 0;}
    int dp[n+1][s+1];
    for(int i=0;i<=n;i++)   {
        for(int j=0;j<=s;j++)   {
            if(i==0)    { dp[i][j] = 0; }
            if(j==0)    { dp[i][j] = 1; }
        }
    }
    for(int i=1;i<=n;i++)   {
        for(int j=1;j<=s;j++)   {
            if(a[i-1]<=j)   {
                dp[i][j] = dp[i-1][j-a[i-1]] + dp[i-1][j];
            }
            else    {
                dp[i][j] = dp[i-1][j];
            }
        }
    }
    return (dp[n][s])*(pow(2,zeroCount));
}
