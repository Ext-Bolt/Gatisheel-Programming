int lcs(int x, int y, string s1, string s2)
    {
        int dp[x+1][y+1];
        for(int i=0;i<x+1;i++)
        {
            dp[i][0]=0;
        }
        for(int j=0;j<y+1;j++)
        {
            dp[0][j]=0;
        }
        for(int i=1;i<x+1;i++)
        {
            for(int j=1;j<y+1;j++)
            {
                if(s1[i-1]==s2[j-1])
                {
                    dp[i][j]=dp[i-1][j-1] + 1;
                }
                else
                {
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        return dp[x][y];
    }

//space - optimised

int lcs(int x, int y, string s1, string s2)
    {
        vector<vector<int>> dp(2,vector<int> (y+1));
        bool bi;
        for(int i = 0;i<x+1;i++)    {
            bi = i & 1;
            for(int j = 0;j<y+1;j++)    {
               if(i == 0 || j == 0) {
                   dp[bi][j] = 0;
               } 
               else if(s1[i-1] == s2[j-1])  {
                   dp[bi][j] = 1 + dp[1-bi][j-1];
               }
               else {
                   dp[bi][j] = max(dp[1-bi][j],dp[bi][j-1]);
               }
            }
        }
        return dp[bi][y];
    }
